{
    "appDescription": "Catalog Service",
    "categories": [
        {
            "categoryName": "Catalog Engine Configuration",
            "properties": [
                {
                    "propName": "modelPurgeWorkerThreadCount",
                    "propDescription": "Number of parallel processoring threads to purge catalog",
                    "propValue": "5",
                    "valueType": "number",
                    "isTenantProperty": "false"
                }
            ]
        },
        {
            "categoryName": "EMS Configurations for Online Catalog Publishing from PSC",
            "properties": [
                {
                    "propName": "catalogLoadingUsingEms",
                    "propDescription": "Enable Catalog Loading using EMS",
                    "propValue": "false",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "emsServerURL",
                    "propDescription": "EMS Server URL",
                    "propValue": "tcp://localhost:7222",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "tibjmsNamingSecurityProtocol",
                    "propDescription": "Security protocol to use in Tibjms JNDI lookups.",
                    "propValue": "",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "tibjmsNamingSslEnableVerifyHost",
                    "propDescription": "Enable TrustStore verification using SSL.",
                    "propValue": "",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "emsServerUsername",
                    "propDescription": "EMS Server User Name",
                    "propValue": "admin",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "emsServerPassword",
                    "propDescription": "EMS Server Password",
                    "propValue": "ENC(T9aNk07NMsU=)",
                    "valueType": "password",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "timeoutReceiveCalls",
                    "propDescription": "EMS message acknowledge timeout",
                    "propValue": "10000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "concurrentEmsConsumers",
                    "propDescription": "EMS Concurrent Consumers",
                    "propValue": "5",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "productCatalogLoadingQueue",
                    "propDescription": "Bulk Product Catalog Loading Queue",
                    "propValue": "tibco.aff.catalog.product.request",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "planfragmentCatalogLoadingQueue",
                    "propDescription": "Bulk Plan-Fragment Catalog Loading Queue",
                    "propValue": "tibco.aff.catalog.planfragment.request",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "actionCatalogLoadingQueue",
                    "propDescription": "Bulk Action Catalog Loading Queue",
                    "propValue": "tibco.aff.catalog.action.request",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "globalCacheCleanNotificationTopic",
                    "propDescription": "Catalog Service Global Cache Clean Topic Name",
                    "propValue": "tibco.fos.global.cache.clean.publish",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "singleProductCatalogLoadingQueue",
                    "propDescription": "Single Product Catalog Loading Queue",
                    "propValue": "tibco.aff.catalog.product.request.single",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "singlePlanfragmentCatalogLoadingQueue",
                    "propDescription": "Single Plan-Fragment Catalog Loading Queue",
                    "propValue": "tibco.aff.catalog.planfragment.request.single",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "singleActionCatalogLoadingQueue",
                    "propDescription": "Single Action Catalog Loading Queue",
                    "propValue": "tibco.aff.catalog.action.request.single",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redeliveryCount",
                    "propDescription": "Failure message redelivery count",
                    "propValue": "5",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redeliveryDelay",
                    "propDescription": "Failure message redelivery delay in milliseconds",
                    "propValue": "10000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "productCatalogLoadingDeadQueue",
                    "propDescription": "Bulk Product Catalog Loading Dead Queue",
                    "propValue": "tibco.aff.catalog.product.request.dead",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "singleProductCatalogLoadingDeadQueue",
                    "propDescription": "Single Product Catalog Loading Dead Queue",
                    "propValue": "tibco.aff.catalog.product.request.single.dead",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "planfragmentCatalogLoadingDeadQueue",
                    "propDescription": "Bulk Plan-Fragment Catalog Loading Dead Queue",
                    "propValue": "tibco.aff.catalog.planfragment.request.dead",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "singlePlanfragmentCatalogLoadingDeadQueue",
                    "propDescription": "Single Plan-Fragment Catalog Loading Dead Queue",
                    "propValue": "tibco.aff.catalog.planfragment.request.single.dead",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "actionCatalogLoadingDeadQueue",
                    "propDescription": "Bulk Action Catalog Loading Dead Queue",
                    "propValue": "tibco.aff.catalog.action.request.dead",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "singleActionCatalogLoadingDeadQueue",
                    "propDescription": "Single Action Catalog Loading Dead Queue",
                    "propValue": "tibco.aff.catalog.action.request.single.dead",
                    "valueType": "string",
                    "isTenantProperty": "false"
                }
            ]
        },
        {
            "categoryName": "Application Security Configurations",
            "properties": [
                {
                    "propName": "operation.roles.submitPlanFragmentModel",
                    "propDescription": "User Role to access submitPlanFragmentModel Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.submitProductModel",
                    "propDescription": "User Role to access submitProductModel Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.submitActionModel",
                    "propDescription": "User Role to access submitActionModel Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.purgePlanFragmentModel",
                    "propDescription": "User Role to access purgePlanFragmentModel Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.purgeProductModel",
                    "propDescription": "User Role to access purgeProductModel Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.purgeActionModel",
                    "propDescription": "User Role to access purgeActionModel Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.getProductModelRoles",
                    "propDescription": "User Role to access getProductModelRoles Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.getPlanFragmentModelRoles",
                    "propDescription": "User Role to access getPlanFragmentModelRoles Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "operation.roles.getActionModelRoles",
                    "propDescription": "User Role to access getActionModelRoles Service",
                    "propValue": "ROLE_ADMIN",
                    "valueType": "string",
                    "isTenantProperty": "false"
                }
            ]
        },
        {
            "categoryName": "Catalog Relational Data Source Configuration",
            "properties": [
                {
                    "propName": "datasourceDriverClassName",
                    "propDescription": "Data Source Driver Class Name",
                    "allowedValues": [
                        "org.postgresql.Driver",
                        "oracle.jdbc.driver.OracleDriver"
                    ],
                    "propValue": "org.postgresql.Driver",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsUsername",
                    "propDescription": "Data Source Username",
                    "propValue": "catalogdsuserll",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsPassword",
                    "propDescription": "Data Source Password",
                    "propValue": "ENC(LyZjaTxmkBpL+MuSLgf82Q==)",
                    "valueType": "password",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsUrl",
                    "propDescription": "Data Source URL",
                    "allowedValues": [
                        "jdbc:postgresql://localhost:5432/catalogdsdbll?currentSchema=catalogdsschemall",
                        "jdbc:oracle:thin:@//localhost:1521/orcl.apac.tibco.com"
                    ],
                    "propValue": "jdbc:postgresql://localhost:5432/catalogdsdbll?currentSchema=catalogdsschemall",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsInitializeSize",
                    "propDescription": "Number of connections that will be established when the connection pool is started",
                    "propValue": "2",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsMaxIdle",
                    "propDescription": "Maximum number of connections that should be kept in the idle pool",
                    "propValue": "11",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsMaxActive",
                    "propDescription": "Maximum number of active connections that can be allocated from this pool at the same time",
                    "propValue": "12",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsMaxWait",
                    "propDescription": "Maximum number of milliseconds that the pool will wait when there are no available connections and the MaxActive has been reached",
                    "propValue": "10000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "datasourceValidationQuery",
                    "propDescription": "SQL query that will be used to validate connections",
                    "allowedValues": [
                        "select 1 from dual",
                        "SELECT 1"
                    ],
                    "propValue": "SELECT 1",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsTestOnBorrow",
                    "propDescription": "Enable connection validation before being borrowed from the pool",
                    "propValue": "false",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsValidationInterval",
                    "propDescription": "Data source validation interval in milliseconds",
                    "propValue": "5000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsTestWhileIdle",
                    "propDescription": "Enable connection validation while idle in connection pool",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsTimeBetweenEvictionRunsMillis",
                    "propDescription": "Data Source Eviction Interval in milliseconds",
                    "propValue": "5000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsMinEvictableIdleTimeMillis",
                    "propDescription": "The minimum amount of time in milliseconds an object must sit idle in the pool before it is eligible for eviction",
                    "propValue": "5000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsNumTestsPerEvictionRun",
                    "propDescription": "Data Source Tests Per Eviction Run",
                    "propValue": "5",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsDefaultAutoCommit",
                    "propDescription": "The default auto-commit state of connections created by this pool",
                    "propValue": "false",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsRollbackOnReturn",
                    "propDescription": "Enable rollback any pending transaction when a connection is returned to pool",
                    "propValue": "false",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsCommitOnReturn",
                    "propDescription": "Enable commit any pending transaction when a connection is returned to pool",
                    "propValue": "false",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogDsCustomProperty",
                    "propDescription": "Database Custom Property",
                    "propValue": "",
                    "valueType": "string",
                    "isTenantProperty": "false"
                }
            ]
        },
        {
            "categoryName": "Redis Data Source Configuration",
            "properties": [
                {
                    "propName": "catalogRedisHost",
                    "propDescription": "Redis Server Host for Storing Catalogs",
                    "propValue": "localhost",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisClusterEnabled",
                    "propDescription": "Whether redis is running in Cluster Mode",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogRedisPort",
                    "propDescription": "Redis Server Port for Storing Catalogs",
                    "propValue": "6379",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogRedisUsername",
                    "propDescription": " Username to connect to Redis Cluster/Node",
                    "propValue": "",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogRedisPassword",
                    "propDescription": "Password to connect to Redis Cluster/Node",
                    "propValue": "password",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogRedisDatabase",
                    "propDescription": "Redis server Database name for storing Catalog Models",
                    "propValue": "",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogRedisClientName",
                    "propDescription": "Redis server ClientName for storing Catalog Models",
                    "propValue": "",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisTestOnBorrow",
                    "propDescription": "Enable connection validation before being borrowed from the pool",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisTestOnReturn",
                    "propDescription": "Enable connection validation before being returned to the pool",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisTestWhileIdle",
                    "propDescription": "Enable connection validation while idle in connection pool",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisBlockedWhenExhausted",
                    "propDescription": "Enable connection blocking on borrow when connection pool is exhausted",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisJmxEnabled",
                    "propDescription": "Enabled JMX for connections",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisLifo",
                    "propDescription": "Enable LIFO behaviour for idle objects. Always returning the most recently used object from the pool ",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisMaxIdle",
                    "propDescription": "Maximum number of idle connections in the pool",
                    "propValue": "64",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisMinIdle",
                    "propDescription": "Minimum number of idle connections to maintain the pool",
                    "propValue": "16",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisMaxTotal",
                    "propDescription": "Maximum number of connections that can be allocated by the pool at a given time.",
                    "propValue": "64",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisNumTestsPerEvictionRun",
                    "propDescription": "Maximum number of connections to examine during each evictor run",
                    "propValue": "5",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisSoftMinEvictableIdleTimeMillis",
                    "propDescription": "Minimum amount of time in milliseconds an object may sit idle in the pool if minIdle instances are available",
                    "propValue": "3000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisMinEvictableIdleTimeMillis",
                    "propDescription": "Minimum amount of time in milliseconds an object may sit idle in the pool",
                    "propValue": "6000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisTimeBetweenEvictionRunsMillis",
                    "propDescription": "Number of milliseconds to sleep between runs of the idle object evictor thread",
                    "propValue": "3000",
                    "valueType": "number",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisSslEnabled",
                    "propDescription": "Connect to Redis Cluster/Node via SSL",
                    "propValue": "true",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisKeyStoreType",
                    "propDescription": "Redis SSL KeyStore Type",
                    "propValue": "pkcs12",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisKeyStorePassword",
                    "propDescription": "Redis SSL KeyStore Password",
                    "propValue": "tibco123",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisTrustStoreType",
                    "propDescription": "Redis SSL TrustStore Type",
                    "propValue": "jks",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisTrustStorePassword",
                    "propDescription": "Redis SSL TrustStore Password",
                    "propValue": "tibco123",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisKeyStoreAbsoluteFilePath",
                    "propDescription": "Redis SSL KeyStore Absolute File Path",
                    "propValue": "D:/certificate/myhost.p12",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "redisTrustStoreAbsoluteFilePath",
                    "propDescription": "Redis SSL TrustStore Absolute File Path",
                    "propValue": "D:/certificate/cacert",
                    "valueType": "string",
                    "isTenantProperty": "false"
                }
            ]
        },
        {
            "categoryName": "Generic Relational Data Source Configuration",
            "properties": [
                {
                    "propName": "databaseType",
                    "propDescription": "Type of relational database used.",
                    "allowedValues": [
                        "postgres",
                        "oracle"
                    ],
                    "propValue": "postgres",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "hibernateDialect",
                    "propDescription": "Hibernate Dialect",
                    "allowedValues": [
                        "org.hibernate.dialect.PostgreSQLDialect",
                        "org.hibernate.dialect.Oracle10gDialect"
                    ],
                    "propValue": "org.hibernate.dialect.PostgreSQLDialect",
                    "valueType": "string",
                    "isTenantProperty": "false"
                },
                {
                    "propName": "catalogHibernateShowSql",
                    "propDescription": "Hibernate Show SQL",
                    "propValue": "false",
                    "valueType": "boolean",
                    "isTenantProperty": "false"
                }
            ]
        }
    ]
}